/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package wil_java;

/**
 *
 * @author Dane
 */

import java.util.ArrayList;
import javax.swing.ImageIcon;
import java.util.Map;
import javax.swing.JOptionPane;
import java.util.HashMap;
import java.util.List;
import javax.swing.*;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;


public class GUI extends javax.swing.JFrame {
    private Map<String, String> cardImageMap;
    private List<String> names = new ArrayList<>();
    private Connection connection;
    
    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
        initializeCardImageMap(); // Initialize the map
        this.names = promptForPlayerNames(); // Prompt the user for player names
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel21.setText("1");
        jLabel21.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel22.setText("2");
        jLabel22.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel23.setText("3");
        jLabel23.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel24.setText("4");
        jLabel24.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel25.setText("5");
        jLabel25.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel26.setText("Player 1");

        jLabel27.setText("Player 2");

        jLabel28.setText("Player 3");

        jLabel29.setText("Player 4");

        jLabel30.setText("Player 5");

        jLabel10.setText("5");
        jLabel10.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jButton1.setText("Replay");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("1");
        jLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel32.setText("jLabel32");

        jLabel11.setText("1");
        jLabel11.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel12.setText("2");
        jLabel12.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel13.setText("3");
        jLabel13.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel14.setText("5");
        jLabel14.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel15.setText("6");
        jLabel15.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel16.setText("1");
        jLabel16.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel17.setText("2");
        jLabel17.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel18.setText("3");
        jLabel18.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel2.setText("2");
        jLabel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel3.setText("3");
        jLabel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel4.setText("4");
        jLabel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel5.setText("5");
        jLabel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel6.setText("1");
        jLabel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel7.setText("2");
        jLabel7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel8.setText("3");
        jLabel8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel9.setText("4");
        jLabel9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel19.setText("4");
        jLabel19.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel20.setText("5");
        jLabel20.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel26)
                    .addComponent(jLabel27)
                    .addComponent(jLabel28)
                    .addComponent(jLabel29)
                    .addComponent(jLabel30))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel21)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel22)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel23)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel24)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel25))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel17)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel18)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel19)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel20))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel12)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel13)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel14)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel15)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel7)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel8)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel9)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel10)
                        .addGap(34, 34, 34)
                        .addComponent(jLabel32))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel26))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10)
                    .addComponent(jLabel27)
                    .addComponent(jLabel32))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jLabel12)
                    .addComponent(jLabel13)
                    .addComponent(jLabel14)
                    .addComponent(jLabel15)
                    .addComponent(jLabel28)
                    .addComponent(jButton1))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(jLabel17)
                    .addComponent(jLabel18)
                    .addComponent(jLabel19)
                    .addComponent(jLabel20)
                    .addComponent(jLabel29))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(jLabel22)
                    .addComponent(jLabel23)
                    .addComponent(jLabel24)
                    .addComponent(jLabel25)
                    .addComponent(jLabel30))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void connectToDatabase() {
        try {
            // Establish a database connection
            String dbURL = "jdbc:sqlserver://localhost\\LAPTOP-IUUGUJQM:1433;databaseName=CardGame_Records;encrypt=false;trustServerCertificate=false";
            String username = "DaneForrester1";
            String password = "12345";
            connection = DriverManager.getConnection(dbURL, username, password);
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }

    private void saveWinnerToDatabase(Player winner) {
        try {
            // Check if the database connection is established
            if (connection == null || connection.isClosed()) {
                connectToDatabase();
            }

            // Prepare the SQL statement
            String sql = "INSERT INTO Winners (name, score) VALUES (?, ?)";
            try (PreparedStatement preparedStatement = connection.prepareStatement(sql)) {
                // Set the parameters for the prepared statement
                preparedStatement.setString(1, winner.getName());
                preparedStatement.setInt(2, winner.calculateScore());

                // Execute the update
                preparedStatement.executeUpdate();
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }
    
    
    private List<String> promptForPlayerNames() {
        List<String> names = new ArrayList<>();
        for (int i = 1; i <= 5; i++) {
            String playerName = JOptionPane.showInputDialog(this, "Enter name for Player " + i);
            if (playerName == null || playerName.trim().isEmpty()) {
                playerName = "Player " + i; // Default name if the user cancels or provides an empty name
            }
            switch (i) {
                case 1:
                    jLabel26.setText(playerName);
                    break;
                case 2:
                    jLabel27.setText(playerName);
                    break;
                case 3:
                    jLabel28.setText(playerName);
                    break;
                case 4:
                    jLabel29.setText(playerName);
                    break;
                case 5:
                    jLabel30.setText(playerName);
                    break;
            }
            names.add(playerName);
        }
        return names;
    }
    
    public List<String> getNames() {
        return names;
    }
     
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Game game = new Game(5); // Create a game with 5 players
        game.dealCardsToPlayers();
        List<Player> players = game.getPlayers(); // Get the list of players

        // Create an instance of the GUI class
        GUI gui = new GUI();
        List<String> names = gui.getNames();
        // for each player 
        // assign name
        for (int i = 0; i < 5; i++) {
           players.get(i).setName(names.get(i));
        }
        

        // Assuming you have an array of JLabels to pass as arguments (you should create these JLabels in your GUI)
        JLabel[] labels = new JLabel[] { 
            gui.jLabel1, 
            gui.jLabel2, 
            gui.jLabel3, 
            gui.jLabel4, 
            gui.jLabel5, 
            gui.jLabel6, 
            gui.jLabel7, 
            gui.jLabel8, 
            gui.jLabel9, 
            gui.jLabel10, 
            gui.jLabel11, 
            gui.jLabel12, 
            gui.jLabel13, 
            gui.jLabel14, 
            gui.jLabel15, 
            gui.jLabel16, 
            gui.jLabel17, 
            gui.jLabel18, 
            gui.jLabel19, 
            gui.jLabel20, 
            gui.jLabel21, 
            gui.jLabel22, 
            gui.jLabel23, 
            gui.jLabel24, 
            gui.jLabel25 
        };
        
        
        // Update labels for all players by passing the players list
        gui.updatePlayerHandLabels(players, labels);

        // Print the winner and their score
        Player winner = game.determineWinner();
        System.out.println("Winner: " + winner + ", Score: " + winner.calculateScore());
        gui.setWinnerLabel(winner.getName()); // Update the label with the winner's name
        
        // Save the winner to the database
        gui.saveWinnerToDatabase(winner);
        
        // Display the GUI
        gui.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    // Method to initialize the card image map
    private void initializeCardImageMap() {
        cardImageMap = new HashMap<>();
        // Mappings for each card name to its corresponding image file path
        cardImageMap.put("2D", "/wil_java/images/3_of_diamonds.png");
        cardImageMap.put("3D", "/wil_java/images/3_of_diamonds.png");
        cardImageMap.put("4D", "/wil_java/images/4_of_diamonds.png");
        cardImageMap.put("5D", "/wil_java/images/5_of_diamonds.png");
        cardImageMap.put("6D", "/wil_java/images/6_of_diamonds.png");
        cardImageMap.put("7D", "/wil_java/images/7_of_diamonds.png");
        cardImageMap.put("8D", "/wil_java/images/8_of_diamonds.png");
        cardImageMap.put("9D", "/wil_java/images/9_of_diamonds.png");
        cardImageMap.put("10D", "/wil_java/images/10_of_diamonds.png");
        cardImageMap.put("JD", "/wil_java/images/11_of_diamonds.png");
        cardImageMap.put("QD", "/wil_java/images/12_of_diamonds.png");
        cardImageMap.put("KD", "/wil_java/images/13_of_diamonds.png");
        cardImageMap.put("AD", "/wil_java/images/14_of_diamonds.png");
        
        cardImageMap.put("2H", "/wil_java/images/2_of_hearts.png");
        cardImageMap.put("3H", "/wil_java/images/3_of_hearts.png");
        cardImageMap.put("4H", "/wil_java/images/4_of_hearts.png");
        cardImageMap.put("5H", "/wil_java/images/5_of_hearts.png");
        cardImageMap.put("6H", "/wil_java/images/6_of_hearts.png");
        cardImageMap.put("7H", "/wil_java/images/7_of_hearts.png");
        cardImageMap.put("8H", "/wil_java/images/8_of_hearts.png");
        cardImageMap.put("9H", "/wil_java/images/9_of_hearts.png");
        cardImageMap.put("10H", "/wil_java/images/10_of_hearts.png");
        cardImageMap.put("JH", "/wil_java/images/11_of_hearts.png");
        cardImageMap.put("QH", "/wil_java/images/12_of_hearts.png");
        cardImageMap.put("KH", "/wil_java/images/13_of_hearts.png");
        cardImageMap.put("AH", "/wil_java/images/14_of_hearts.png");
        
        cardImageMap.put("2C", "/wil_java/images/2_of_clubs.png");
        cardImageMap.put("3C", "/wil_java/images/3_of_clubs.png");
        cardImageMap.put("4C", "/wil_java/images/4_of_clubs.png");
        cardImageMap.put("5C", "/wil_java/images/5_of_clubs.png");
        cardImageMap.put("6C", "/wil_java/images/6_of_clubs.png");
        cardImageMap.put("7C", "/wil_java/images/7_of_clubs.png");
        cardImageMap.put("8C", "/wil_java/images/8_of_clubs.png");
        cardImageMap.put("9C", "/wil_java/images/9_of_clubs.png");
        cardImageMap.put("10C", "/wil_java/images/10_of_clubs.png");
        cardImageMap.put("JC", "/wil_java/images/11_of_clubs.png");
        cardImageMap.put("QC", "/wil_java/images/12_of_clubs.png");
        cardImageMap.put("KC", "/wil_java/images/13_of_clubs.png");
        cardImageMap.put("AC", "/wil_java/images/14_of_clubs.png");
        
        cardImageMap.put("2S", "/wil_java/images/2_of_spades.png");
        cardImageMap.put("3S", "/wil_java/images/3_of_spades.png");
        cardImageMap.put("4S", "/wil_java/images/4_of_spades.png");
        cardImageMap.put("5S", "/wil_java/images/5_of_spades.png");
        cardImageMap.put("6S", "/wil_java/images/6_of_spades.png");
        cardImageMap.put("7S", "/wil_java/images/7_of_spades.png");
        cardImageMap.put("8S", "/wil_java/images/8_of_spades.png");
        cardImageMap.put("9S", "/wil_java/images/9_of_spades.png");
        cardImageMap.put("10S", "/wil_java/images/10_of_spades.png");
        cardImageMap.put("JS", "/wil_java/images/11_of_spades.png");
        cardImageMap.put("QS", "/wil_java/images/12_of_spades.png");
        cardImageMap.put("KS", "/wil_java/images/13_of_spades.png");
        cardImageMap.put("AS", "/wil_java/images/14_of_spades.png");
        // Add mappings for all other cards
    }

    // Method to update a label with a card image
    private void updateLabelWithCardImage(JLabel label, String cardName) {
        System.out.println("Card Name: " + cardName);
        String imagePath = cardImageMap.get(cardName);
        if (imagePath != null) {
            ImageIcon icon = new ImageIcon(imagePath);
            
            icon = new ImageIcon(getClass().getResource(imagePath));
            label.setIcon(icon);
        } else {
            // Handle the case where the image is not found
            System.out.println("Image not found for card: " + cardName);
        }
    }

    // Call this method to update the labels with card images for a specific player's hand
    private void updatePlayerHandLabels(List<Player> players, JLabel[] labels) {
        int labelIndex = 1;
        for (Player currentPlayer : players) {
            List<Card> hand = currentPlayer.getHand();
            for (int i = 0; i < hand.size() && labelIndex <= labels.length; i++, labelIndex++) {
                String cardName = hand.get(i).toString();
                System.out.println("Updating label " + labelIndex);
                updateLabelWithCardImage(labels[labelIndex - 1], cardName);
            }
        }
    }
    public void setWinnerLabel(String winnerName) {
        jLabel32.setText("Winner: " + winnerName);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        Game game = new Game(5); // Create a game with 5 players
        game.dealCardsToPlayers();
        List<Player> players = game.getPlayers(); // Get the list of players

        // Create an instance of the GUI class
        GUI gui = new GUI();
        List<String> names = gui.getNames();
        // for each player 
        // assign name
        for (int i = 0; i < 5; i++) {
           players.get(i).setName(names.get(i));
        }
        

        // Assuming you have an array of JLabels to pass as arguments (you should create these JLabels in your GUI)
        JLabel[] labels = new JLabel[] { 
            gui.jLabel1, 
            gui.jLabel2, 
            gui.jLabel3, 
            gui.jLabel4, 
            gui.jLabel5, 
            gui.jLabel6, 
            gui.jLabel7, 
            gui.jLabel8, 
            gui.jLabel9, 
            gui.jLabel10, 
            gui.jLabel11, 
            gui.jLabel12, 
            gui.jLabel13, 
            gui.jLabel14, 
            gui.jLabel15, 
            gui.jLabel16, 
            gui.jLabel17, 
            gui.jLabel18, 
            gui.jLabel19, 
            gui.jLabel20, 
            gui.jLabel21, 
            gui.jLabel22, 
            gui.jLabel23, 
            gui.jLabel24, 
            gui.jLabel25 
        };
        
        
        // Update labels for all players by passing the players list
        gui.updatePlayerHandLabels(players, labels);

        // Print the winner and their score
        Player winner = game.determineWinner();
        System.out.println("Winner: " + winner + ", Score: " + winner.calculateScore());
        gui.setWinnerLabel(winner.getName()); // Update the label with the winner's name

        // Save the winner to the database
        gui.saveWinnerToDatabase(winner);
        
        // Display the GUI
        gui.setVisible(true);
    }






    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    // End of variables declaration//GEN-END:variables
}
